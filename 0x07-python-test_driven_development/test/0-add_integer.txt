>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(12, 15)
27
>>> add_integer(12.89, 15.0)
27
>>> add_integer("12", 15.0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 19, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer(50)
148
>>> add_integer(50, "a")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 22, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer(50, j)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'j' is not defined
>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(50000003, 2)
50000005
